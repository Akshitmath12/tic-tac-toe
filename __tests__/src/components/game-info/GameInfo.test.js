// Test generated by RoostGPT for test reactTesting using AI Type Open AI and AI Model gpt-4-1106-preview


// Import React testing utilities
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom';

// Import the component to be tested
import GameInfo from '../../../../src/components/game-info/GameInfo';

// Define the test suite
describe('GameInfo Component', () => {
  // Test case for when it is player X's turn and there is no winner
  test('displays that it is player X\'s turn when xIsNext is true and there is no winner', () => {
    render(<GameInfo status="Next player: X" xIsNext={true} winner={null} />);
    expect(screen.getByText(/It's your turn, player X/i)).toBeInTheDocument();
  });

  // Test case for when it is player O's turn and there is no winner
  test('displays that it is player O\'s turn when xIsNext is false and there is no winner', () => {
    render(<GameInfo status="Next player: O" xIsNext={false} winner={null} />);
    expect(screen.getByText(/Now you, player O!/i)).toBeInTheDocument();
  });

  // Test case for when player X is the winner
  test('displays celebration message for player X when they have won', () => {
    render(<GameInfo status="Winner: X" winner="X" xIsNext={false} />);
    expect(screen.getByText(/Nice! I won!/i)).toBeInTheDocument();
  });

  // Test case for when player O is the winner
  test('displays celebration message for player O when they have won', () => {
    render(<GameInfo status="Winner: O" winner="O" xIsNext={true} />);
    expect(screen.getByText(/Wohoo! I made it!/i)).toBeInTheDocument();
  });

  // Test case for displaying the image
  test('displays the image correctly', () => {
    render(<GameInfo status={null} winner={null} xIsNext={false} />);
    expect(screen.getByAltText(/Player X and Player O/i)).toBeInTheDocument();
  });
});

