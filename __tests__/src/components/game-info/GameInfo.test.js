// Test generated by RoostGPT for test reactTesting using AI Type Open AI and AI Model gpt-4-1106-preview


import React from 'react';
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom';
import GameInfo from '../../../src/components/game-info/GameInfo.js'; // Note the relative path

describe('GameInfo Component', () => {
 
  test('renders "It\'s your turn, player X" when xIsNext is true and no winner', () => {
    render(<GameInfo xIsNext={true} winner={null} />);
    expect(screen.getByText("It's your turn, player X")).toBeInTheDocument();
  });

  test('renders "Now you, player O!" when xIsNext is false and no winner', () => {
    render(<GameInfo xIsNext={false} winner={null} />);
    expect(screen.getByText("Now you, player O!")).toBeInTheDocument();
  });

  test('renders "Nice! I won!" when winner is "X"', () => {
    render(<GameInfo status='Winner: X' winner='X' xIsNext={false} />);
    expect(screen.getByText("Nice! I won!")).toBeInTheDocument();
  });

  test('renders "Wohoo! I made it!" when winner is "O"', () => {
    render(<GameInfo status='Winner: O' winner='O' xIsNext={true} />);
    expect(screen.getByText("Wohoo! I made it!")).toBeInTheDocument();
  });
  
  // We could also add more tests for any other behavior or edge cases that the component might have
  // For example, ensuring the Friends image is always rendered could be a test case.

  test('always renders the friends image', () => {
    render(<GameInfo />);
    expect(screen.getByAltText('Player X and Player O')).toBeInTheDocument();
  });
});

