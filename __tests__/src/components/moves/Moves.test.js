// Test generated by RoostGPT for test reactTesting using AI Type Open AI and AI Model gpt-4-1106-preview


import React from 'react';
import { render, fireEvent, cleanup } from '@testing-library/react';
import Moves from '../../../src/components/moves/Moves.js';

// Creating a test suite for the Moves component
describe('Moves', () => {
  // Cleanup after each test case
  afterEach(cleanup);

  // Test case for rendering Moves with default props
  test('renders with default props', () => {
    const { getByTestId } = render(<Moves moves={[]} onClick={() => {}} />);
    expect(getByTestId('moves-list')).toBeInTheDocument();
  });

  // Test case for rendering Moves with a non-empty moves list
  test('renders list of moves', () => {
    const moves = ['Move 1', 'Move 2', 'Move 3'];
    const { getByTestId } = render(<Moves moves={moves} onClick={() => {}} />);
    expect(getByTestId('moves-list')).toBeInTheDocument();
    moves.forEach((move, index) => {
      expect(getByTestId(`move-${index}`)).toHaveTextContent(move);
    });
  });

  // Test case for clicking on a move
  test('clicking on a move calls onClick handler with move index', () => {
    const moves = ['Move 1', 'Move 2', 'Move 3'];
    const onClickMock = jest.fn();
    const { getByTestId } = render(<Moves moves={moves} onClick={onClickMock} />);
    
    const moveIndexToTest = 1;
    fireEvent.click(getByTestId(`move-${moveIndexToTest}`));
    
    expect(onClickMock).toHaveBeenCalledWith(moveIndexToTest);
  });

  // Include any additional test cases here
});

