// Test generated by RoostGPT for test reactTesting using AI Type Open AI and AI Model gpt-4-1106-preview

// __tests__/src/helpers/calculateWinner.test.js
// calculateWinner.test.js
import calculateWinner from "../../../src/helpers/calculateWinner";

describe("calculateWinner", () => {
  test('should return "X" as the winner if "X" has a winning combination', () => {
    const squares = ["X", "X", "X", null, null, null, null, null, null];
    expect(calculateWinner(squares)).toBe("X");
  });

  test('should return "O" as the winner if "O" has a winning combination', () => {
    const squares = [null, null, null, "O", "O", "O", null, null, null];
    expect(calculateWinner(squares)).toBe("O");
  });

  test('should return "null" if there is no winner', () => {
    const squares = ["X", "O", "X", "X", "O", "O", null, null, null];
    expect(calculateWinner(squares)).toBeNull();
  });

  test('should return "null" when the board is empty', () => {
    const squares = Array(9).fill(null);
    expect(calculateWinner(squares)).toBeNull();
  });

  test('should return "null" for a draw', () => {
    const squares = ["X", "X", "O", "O", "O", "X", "X", "O", "X"];
    expect(calculateWinner(squares)).toBeNull();
  });
});
