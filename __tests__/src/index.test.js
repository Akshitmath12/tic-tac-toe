// Test generated by RoostGPT for test reactTesting using AI Type Open AI and AI Model gpt-4-1106-preview


import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Game from '../../src/index.js';

describe('Game Component', () => {
  test('starts with X as the next player', () => {
    const { getByText } = render(<Game />);
    expect(getByText(/Next player: X/i)).toBeInTheDocument();
  });

  test('allows a player to make a move', () => {
    const { getAllByRole, getByText } = render(<Game />);
    const buttons = getAllByRole('button');
    fireEvent.click(buttons[0]); // Player 'X' moves
    expect(getByText(/Next player: O/i)).toBeInTheDocument();
  });

  test('calculates the winner correctly', () => {
    const { getAllByRole, getByText } = render(<Game />);
    const buttons = getAllByRole('button');
    // Player 'X' moves
    fireEvent.click(buttons[0]);
    fireEvent.click(buttons[1]);
    fireEvent.click(buttons[4]);
    fireEvent.click(buttons[2]);
    fireEvent.click(buttons[8]);
    expect(getByText(/Winner: X/i)).toBeInTheDocument();
  });

  test('does not allow to click on a taken square', () => {
    const { getAllByRole } = render(<Game />);
    const buttons = getAllByRole('button');
    fireEvent.click(buttons[0]); // Player 'X' moves
    fireEvent.click(buttons[0]); // Try to click the same square
    expect(buttons[0]).toHaveTextContent('X');
    expect(buttons[0]).not.toHaveTextContent('O');
  });

  test('clicking on the history steps correctly jump back', () => {
    const { getAllByRole, getByText } = render(<Game />);
    const buttons = getAllByRole('button');
    fireEvent.click(buttons[0]); // Player 'X' moves
    fireEvent.click(buttons[1]); // Player 'O' moves
    const stepButtons = getAllByRole('listitem');
    fireEvent.click(stepButtons[0]); // Jump back to beginning
    expect(getByText(/Next player: X/i)).toBeInTheDocument();
  });

  // Additional tests should go here...
});

