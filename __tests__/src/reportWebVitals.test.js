// Test generated by RoostGPT for test ticTacToe using AI Type Open AI and AI Model gpt-4-1106-preview

// __tests__/src/reportWebVitals.test.js
import reportWebVitals from '../../src/reportWebVitals';

describe('reportWebVitals', () => {
  // Mock the 'web-vitals' import
  jest.mock('web-vitals', () => ({
    getCLS: jest.fn(),
    getFID: jest.fn(),
    getFCP: jest.fn(),
    getLCP: jest.fn(),
    getTTFB: jest.fn()
  }));
  
  beforeEach(() => {
    // Clear all mocks before each test
    jest.clearAllMocks();
  });

  test('it does not call web vitals if onPerfEntry is not a function', () => {
    const onPerfEntry = 'not a function';
    reportWebVitals(onPerfEntry);
    
    // We expect the web vitals functions not to be called
    expect(require('web-vitals').getCLS).not.toBeCalled();
    expect(require('web-vitals').getFID).not.toBeCalled();
    expect(require('web-vitals').getFCP).not.toBeCalled();
    expect(require('web-vitals').getLCP).not.toBeCalled();
    expect(require('web-vitals').getTTFB).not.toBeCalled();
  });

  test('it calls web vitals if onPerfEntry is a function', async () => {
    const onPerfEntry = jest.fn();
    await reportWebVitals(onPerfEntry);

    // We expect the web vitals functions to be called
    expect(require('web-vitals').getCLS).toBeCalledWith(onPerfEntry);
    expect(require('web-vitals').getFID).toBeCalledWith(onPerfEntry);
    expect(require('web-vitals').getFCP).toBeCalledWith(onPerfEntry);
    expect(require('web-vitals').getLCP).toBeCalledWith(onPerfEntry);
    expect(require('web-vitals').getTTFB).toBeCalledWith(onPerfEntry);
  });
});

