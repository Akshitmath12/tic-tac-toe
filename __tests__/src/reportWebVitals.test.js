// Test generated by RoostGPT for test ticTacToe using AI Type Open AI and AI Model gpt-4-1106-preview

// Assuming that the test file is stored in __tests__/src/reportWebVitals.test.js
// The relative path from the test file to the reportWebVitals.js is ../../src/reportWebVitals

import reportWebVitals from '../../src/reportWebVitals';

// Mock the 'web-vitals' module to prevent actual network requests and metrics calculation
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    // Clear all mock function calls before each test
    jest.clearAllMocks();
  });

  test('should call onPerfEntry with each metric when provided', async () => {
    const onPerfEntry = jest.fn();

    // Trigger reportWebVitals with the mock callback
    reportWebVitals(onPerfEntry);

    // Since reportWebVitals executes an asynchronous operation, we wait for the next event loop tick
    await new Promise(process.nextTick);

    expect(onPerfEntry).toHaveBeenCalledTimes(5); // There are 5 metrics
  });

  test('should not throw an error when onPerfEntry is not provided', () => {
    expect(() => reportWebVitals()).not.toThrow();
  });

  test('should not call onPerfEntry if it is not a function', () => {
    const onPerfEntry = 'notAFunction';
    reportWebVitals(onPerfEntry);

    // Technically, we shouldn't need to wait since no async operation should occur in this case
    expect(onPerfEntry).not.toHaveBeenCalled();
  });
});

