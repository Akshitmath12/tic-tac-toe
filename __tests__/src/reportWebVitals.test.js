// Test generated by RoostGPT for test ticTacToe using AI Type Open AI and AI Model gpt-4-1106-preview

// The relative path from the test file (__tests__/src) to the component file is '../../src/reportWebVitals'
import reportWebVitals from '../../src/reportWebVitals';

// Mock the 'web-vitals' module to avoid actual performance tracking during tests
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn()
}));

describe('reportWebVitals', () => {
  let mockOnPerfEntry;

  beforeEach(() => {
    // Reset all mocks before each test
    jest.resetAllMocks();
    mockOnPerfEntry = jest.fn();
  });

  test('should not call web vitals if onPerfEntry is not a function', () => {
    reportWebVitals(null);
    expect(mockOnPerfEntry).not.toHaveBeenCalled();
  });

  test('should call web vitals when onPerfEntry is a function', () => {
    const { getCLS, getFID, getFCP, getLCP, getTTFB } = require('web-vitals');
    reportWebVitals(mockOnPerfEntry);

    // Verify web-vitals functions are called when onPerfEntry is a function
    expect(getCLS).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(getFID).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(getFCP).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(getLCP).toHaveBeenCalledWith(mockOnPerfEntry);
    expect(getTTFB).toHaveBeenCalledWith(mockOnPerfEntry);

    // Assuming web-vitals functions should have been called only once
    expect(getCLS).toHaveBeenCalledTimes(1);
    expect(getFID).toHaveBeenCalledTimes(1);
    expect(getFCP).toHaveBeenCalledTimes(1);
    expect(getLCP).toHaveBeenCalledTimes(1);
    expect(getTTFB).toHaveBeenCalledTimes(1);
  });

  // Add more test cases as needed to cover edge cases and error handling
});


